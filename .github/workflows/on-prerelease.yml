# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: On Pre-Release
on:
  release:
    types:
      - prereleased

env:
  GITHUB_TOKEN: ${{ secrets.PAT_ATTACH_TO_RELEASE }}
  MANIFEST_FILE: "manifest.spdx.json"
  PACKAGE_NAME: "vscode-metaed-ide"
  REF: ${{ github.ref_name }}

jobs:
  package:
    name: Build VSIX Package
    runs-on: ubuntu-latest
    outputs:
      hash-code: ${{ steps.hash-code.outputs.hash-code }}
      sbom-hash-code: ${{ steps.sbom-hash-code.outputs.sbom-hash-code }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        run: npm install

      - name: Build Typescript
        run: npm run build

      - name: Install vsce
        run: npm install --global @vscode/vsce

      - name: Build vsix package
        run: |
          npm run package:clean
          npm run package:vsce

      - name: Generate hash code for VSIX file
        id: hash-code
        run: |
          # sha256sum returns "<hashcode>  <name of file". Split that and return only the <hashcode>.
          hash=$(sha256sum ./extension/vscode-metaed.vsix | awk '{split($0,a); print a[1]}')
          echo "hash-code=$hash" >> $GITHUB_OUTPUT

      - name: Upload vsix package
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: vscode-metaed.vsix
          path: extension/vscode-metaed.vsix
          retention-days: 1

      # Handling SBOM differently for npm than for NuGet packages, because we need to 
      # build the SBOM from the `dist` folder.
      - name: Build a Software Bill of Materials
        shell: pwsh
        run: |
          $version = (npm version | ConvertFrom-Json).'vscode-metaed-ide'

          dotnet tool install --global Microsoft.Sbom.DotNetTool

          sbom-tool generate -b dist -bc . -pn vscode-metaed-ide -pv $version -ps "Ed-Fi Alliance, LLC" -nsb https://ed-fi.org

          cp ./dist/_manifest/spdx_2.2/manifest.spdx.* .

      - name: Upload SBOM
        if: success()
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ${{ env.PACKAGE_NAME }}-SBOM
          path: ${{ env.MANIFEST_FILE }}
          if-no-files-found: error
          retention-days: 30

      - name: Generate hash code for SBOM
        id: sbom-hash-code
        shell: bash
        run: |          
          sbom_hash=$(cat ${{ env.MANIFEST_FILE }}.sha256)
          echo "sbom-hash-code=$sbom_hash"
          echo "sbom-hash-code=$sbom_hash" >> $GITHUB_OUTPUT

  packages-attach:
    name: Attach Package to Release
    runs-on: ubuntu-latest
    needs: package
    permissions:
      actions: read
      contents: write
    steps:
     - name: Securely retrieve the package from artifacts
       uses: Ed-Fi-Alliance-OSS/slsa-github-generator/.github/actions/secure-download-artifact@main
       with:
          name: vscode-metaed.vsix
          path: vscode-metaed.vsix
          sha256: "${{ needs.package.outputs.hash-code }}"
          
     - name: Attach to release
       uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda #v2.1.1
       if: startsWith(github.ref, 'refs/tags/')
       with:
          files: vscode-metaed.vsix
          token: ${{ env.GITHUB_TOKEN }}

  sbom-attach:
    name: Attach SBOM file
    runs-on: ubuntu-latest
    needs: package
    permissions:
      actions: read
      contents: write
    steps:
      - name: Download the SBOM
        uses: Ed-Fi-Alliance-OSS/slsa-github-generator/.github/actions/secure-download-artifact@main
        with:
          name: "${{ env.PACKAGE_NAME }}-SBOM"
          path: ${{ env.MANIFEST_FILE }}
          sha256: "${{ needs.package.outputs.sbom-hash-code }}"

      - name: Compress SBOM file
        id: compress
        shell: pwsh
        run: |
          $file = "${{ env.MANIFEST_FILE }}"
          $uploadName = "${{ env.PACKAGE_NAME }}-SBOM.zip"
          Compress-Archive $file -DestinationPath $uploadName
          "uploadName=$uploadName" >> $env:GITHUB_OUTPUT
        
      - name: Attach to release
       uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda #v2.1.1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "${{ steps.compress.outputs.uploadName }}"
          token: ${{ env.GITHUB_TOKEN }}